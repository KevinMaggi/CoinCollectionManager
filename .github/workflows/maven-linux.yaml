name: Build with Maven (Linux) [SonarCloud-Coveralls]

on:
  push:
  pull_request:

jobs:
  build:
    name: Build on Linux (with SonarCloud and Coveralls)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            ~/.sonar/cache
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml', '**/*.yaml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Install tightvncserver and blackbox
        run: sudo apt-get install -y tightvncserver blackbox
      - name: Build with Maven Wrapper
        run: ../execute-on-vnc.sh ../mvnw install $MAVEN_PROFILES $ADDITIONAL_COVERALLS_ARGS $SONAR
        working-directory: coin-collection-manager-aggregator
        env: 
          MAVEN_PROFILES: -Pcoveralls,pitest
          ADDITIONAL_COVERALLS_ARGS: -DrepoToken=${{ secrets.COVERALLS_TOKEN }} -DpullRequest=${{ github.event.pull_request.number }}
          SONAR: sonar:sonar -Dsonar.projectKey=KevinMaggi_CoinCollectionManager -Dsonar.organization=kevinmaggi -Dsonar.host.url=https://sonarcloud.io
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Generate JUnit Report
        if: ${{ failure() }}
        run: ../mvnw surefire-report:report-only surefire-report:failsafe-report-only site:site -DgenerateReports=false -Daggregate=true
        working-directory: coin-collection-manager-aggregator
      - name: Archive JUnit Report
        uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: junit-report
          path: '**/target/site'
      - name: Archive failed GUI test screenshot
        uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: failed-gui-tests-screenshot
          path: '**/failed-gui-tests'
      - name: Generate PiTest Report
        if: ${{ failure() }}
        run: ../mvnw org.pitest:pitest-maven:report-aggregate-module
        working-directory: coin-collection-manager-aggregator
      - name: Archive PiTest Report
        uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: pitest-report
          path: '**/target/pit-reports'